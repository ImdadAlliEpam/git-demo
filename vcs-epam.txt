======================
LMM(Lock Modify Merge)
======================
=> This Lock-Modify-Merge strategy ensures that only one person can work on a specific resource at a time so it prevent concurrent modification which may occur by the other developers.

   Lock :- When a developer wants to work on a specific file or section of code , then he need to accure a lock on that resource.
	   It prevent other developers to make changes to the same resource on the same time.

   Modify :- After accuring the lock The developer can modify the file.

   Merge :- After successfull modification the developer can merge the code with main source code.


Note:- But this strategy is time consuming , Branch-commit-Merge or Copy-Modify-Merge strategy overcome these problems.


=======================
CMM(Copy Modify Merge)
=======================
=>This Copy-Modify-Merge strategy promotes parallel development .

  Copy :- Each developer keep copy of source code to develop independently without waiting for other

  Modify :- Here developers can modify copy file that present with them.

  Merge :- After development all can merge to main source code.
	   During merging if any conflits occure then they need to resolve.






git pull = git fetch + git merge

git fetch => Don't add the remote changes to local file, to add we have to execute $ git merge.

git pull => It is the combination of git fetch and git merge.


===========
git reset
===========
=> $ git reset --soft HEAD~1	=> This cmd undo the last commit and bring the files to staged area.

=> $ git reset --mixed HEAD~1	=> This cmd undo the last commit and bring the files to unstaged area.

=> $ git reset --hard HEAD~1	=> This cmd undo the last commit and delete the files





